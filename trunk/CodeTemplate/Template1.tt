<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>

 using System;
namespace MyProject.Entities
{   
      <#string connectionString = "Data Source=172.17.4.44;Initial Catalog=EHC_CRM;Persist Security Info=True;User ID=sa;Password=ehousechina";

           SqlConnection conn = new SqlConnection(connectionString);

           conn.Open();

           System.Data.DataTable schema = conn.GetSchema("TABLES");

           string selectQuery = "select * from @tableName";

           SqlCommand command = new SqlCommand(selectQuery,conn);

           SqlDataAdapter ad = new SqlDataAdapter(command);

           System.Data.DataSet ds = new DataSet();        
		   EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);
		   fileManager.StartHeader();
           foreach(System.Data.DataRow row in schema.Rows)
           {
			//string name =row["TABLE_NAME"].ToString().Trim('s')+".cs";
			fileManager.StartNewFile("a");#>
 
		   public class <#= row["TABLE_NAME"].ToString().Trim('s') #>
		   {    <#                     
                   ds.Tables.Clear();

                  command.CommandText = selectQuery.Replace("@tableName",row["TABLE_NAME"].ToString());

                  ad.FillSchema(ds, SchemaType.Mapped, row["TABLE_NAME"].ToString());         

                  foreach (DataColumn dc in ds.Tables[0].Columns)
                  {    #>                    
                  private <#= dc.DataType.Name #> _<#= dc.ColumnName.Replace(dc.ColumnName[0].ToString(), dc.ColumnName[0].ToString().ToLower())      #>;                      
                  public <#= dc.DataType.Name #> <#= dc.ColumnName #>
                  {
                     get { return _<#= dc.ColumnName.Replace(dc.ColumnName[0].ToString(), dc.ColumnName[0].ToString().ToLower()) #>; }
                     set { _<#= dc.ColumnName.Replace(dc.ColumnName[0].ToString(), dc.ColumnName[0].ToString().ToLower()) #> = value; }
                  }                                                
              <# }  #>         
           }    

           <#fileManager.EndBlock();
           }#>       
		   		   }


